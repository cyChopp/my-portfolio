[{"/Users/alex/Desktop/portfolio/my-portfolio/src/index.js":"1","/Users/alex/Desktop/portfolio/my-portfolio/src/App.js":"2","/Users/alex/Desktop/portfolio/my-portfolio/src/components/Navbar/NavBar.js":"3","/Users/alex/Desktop/portfolio/my-portfolio/src/components/Feed/Feed.js":"4","/Users/alex/Desktop/portfolio/my-portfolio/src/imageList.js":"5","/Users/alex/Desktop/portfolio/my-portfolio/src/components/Projects/Projects.js":"6","/Users/alex/Desktop/portfolio/my-portfolio/src/components/Projects/Project/Project.js":"7","/Users/alex/Desktop/portfolio/my-portfolio/src/components/Skills/Skills.js":"8","/Users/alex/Desktop/portfolio/my-portfolio/src/components/Skills/Skill/Skill.js":"9","/Users/alex/Desktop/portfolio/my-portfolio/src/components/Experience/Experience.js":"10","/Users/alex/Desktop/portfolio/my-portfolio/src/components/ContactMe/ContactMe.js":"11"},{"size":352,"mtime":1610711705879,"results":"12","hashOfConfig":"13"},{"size":2001,"mtime":1610717170227,"results":"14","hashOfConfig":"13"},{"size":3647,"mtime":1610728346740,"results":"15","hashOfConfig":"13"},{"size":1200,"mtime":1610728574783,"results":"16","hashOfConfig":"13"},{"size":223,"mtime":1610542275216,"results":"17","hashOfConfig":"13"},{"size":1644,"mtime":1610666285850,"results":"18","hashOfConfig":"13"},{"size":1782,"mtime":1610649326486,"results":"19","hashOfConfig":"13"},{"size":1642,"mtime":1610713982887,"results":"20","hashOfConfig":"13"},{"size":428,"mtime":1610567869501,"results":"21","hashOfConfig":"13"},{"size":1487,"mtime":1610658457229,"results":"22","hashOfConfig":"13"},{"size":6444,"mtime":1610733412827,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"10hj9a1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/Users/alex/Desktop/portfolio/my-portfolio/src/index.js",[],["52","53"],"/Users/alex/Desktop/portfolio/my-portfolio/src/App.js",["54","55","56","57","58","59"],"import \"./App.css\";\nimport Feed from \"./components/Feed/Feed\";\nimport NavBar from \"./components/Navbar/NavBar\";\nimport { imageList } from \"./imageList\";\nimport social from \"./icons/socialNetwork.png\";\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ScrollUpButton from \"react-scroll-up-button\";\n\n\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport Projects from \"./components/Projects/Projects\";\nimport Skills from \"./components/Skills/Skills\";\nimport Experience from \"./components/Experience/Experience\";\nimport ContactMe from \"./components/ContactMe/ContactMe\";\n\nimport { ParallaxProvider } from \"react-scroll-parallax\";\n\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\nfunction App() {\n  let Scroll = require(\"react-scroll\");\n  let scroll = Scroll.animateScroll;\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n    scroll.scrollToTop(0, 0);\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {loading ? (\n        <div className=\"app_loader\">\n          <ScaleLoader\n            color={\"#0effea\"}\n            loading={loading}\n            height={35}\n            width={4}\n            radius={2}\n            margin={2}\n          />\n        </div>\n      ) : (\n        <>\n          <div className=\"app_background\">\n            <ParallaxProvider>\n              <NavBar />\n              <Feed />\n              <Skills />\n              <Projects />\n              <Experience />\n              <ContactMe />\n            </ParallaxProvider>\n          </div>\n          <div>\n            <ScrollUpButton\n              ContainerClassName=\"AnyClassForContainer\"\n              TransitionClassName=\"AnyClassForTransition\"\n            >\n              <ArrowDropUpIcon  fontSize='inherit'  style={{color:'#fff'}}/>\n            </ScrollUpButton>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/alex/Desktop/portfolio/my-portfolio/src/components/Navbar/NavBar.js",["60","61"],"import React, { useEffect, useState } from \"react\";\nimport \"./NavBar.css\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {\n  motion,\n  useSpring,\n  useTransform,\n  useViewportScroll,\n} from \"framer-motion\";\nimport { Link } from \"react-scroll\";\n\nconst NavBar = () => {\n  const [isComplete, setIsComplete] = useState(false);\n  const { scrollYProgress } = useViewportScroll();\n  const yRange = useTransform(scrollYProgress, [0, 0.9], [0, 1]);\n  const pathLength = useSpring(yRange, { stiffness: 400, damping: 90 });\n\n  useEffect(() =>{\n     yRange.onChange((v) => setIsComplete(v >= 1))\n\n    }, [yRange]);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n\n  const openNav = () => {\n    document.getElementById(\"mySidenav\").style.width = \"100%\";\n  };\n\n  const closeNav = () => {\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n  };\n\n  return (\n    <div className='navbar_wrapper'>\n      <div className=\"fixedNavbarWrapper\">\n        <div className=\"pathLength\">\n          <svg className=\"progress-icon\" viewBox=\"0 0 60 60\">\n            <motion.path\n              fill=\"none\"\n              strokeWidth=\"2\"\n              stroke=\"#0affec\"\n              strokeDasharray=\"0 1\"\n              d=\"M 0, 20 a 20, 20 0 1,0 40,0 a 20, 20 0 1,0 -40,0\"\n              style={{\n                pathLength,\n                rotate: 90,\n                translateX: 5,\n                translateY: 5,\n                scaleX: -1, // Reverse direction of line animation\n              }}\n            />\n            <motion.path\n              fill=\"none\"\n              strokeWidth=\"2\"\n              stroke=\"white\"\n              d=\"M14,26 L 22,33 L 35,16\"\n              initial={false}\n              strokeDasharray=\"0 1\"\n              animate={{ pathLength: isComplete ? 1 : 0 }}\n            />\n          </svg>\n        </div>\n        <div className=\"grow\" />\n        <div className=\"navbarLinks\">\n          <ul>\n            <li>\n              \n              <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} duration={1000} >SKILLS</Link>\n            </li>\n            <li>\n              <Link activeClass=\"active\" to=\"projects\" spy={true} smooth={true} duration={1000} >PROJECTS</Link>\n            </li>\n            <li>\n              <Link activeClass=\"active\" to=\"experience\" spy={true} smooth={true} duration={1000} >EXPERIENCE</Link>\n            </li>\n            <li>\n              <Link activeClass=\"active\" to=\"contact\" spy={true} smooth={true} duration={1000} > CV / CONTACT ME</Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"grow\" />\n      </div>\n\n      <div id=\"mySidenav\" className=\"sidenav\">\n        <div href=\"#\" >\n          <MenuIcon  onClick={closeNav} className=\"closebtn \"/>\n        </div>\n        <div className='navbar_sidebar'>\n        <ul>\n          <li>\n            <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} duration={1000} onClick={closeNav}>SKILLS</Link>\n          </li>\n          <li>\n            <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} duration={1000} onClick={closeNav}>PROJECTS</Link>\n          </li>\n          <li>\n            <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} duration={1000} onClick={closeNav}>EXPERIENCE</Link>\n          </li>\n          <li>\n            <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} duration={1000} onClick={closeNav}>CV / CONTACT ME</Link>\n          </li>\n        </ul>\n        </div>\n      </div>\n      <div className=\"navIcon\"  onClick={openNav} >\n      <MenuIcon style={{float:'right',padding:'10px'}} />\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","/Users/alex/Desktop/portfolio/my-portfolio/src/components/Feed/Feed.js",["62"],"import { motion } from \"framer-motion\";\nimport React from \"react\";\nimport \"./Feed.css\";\nimport './ScrollAnimation.css';\nimport { ReactComponent as ImportedComponentOne } from \"../../icons/1.svg\";\nimport { ReactComponent as ImportedComponentZero } from \"../../icons/0.svg\";\nimport { styled } from \"@material-ui/core\";\n\nconst StyledSVGOne = styled(ImportedComponentOne)`\n  display: block;\n  margin: auto;\n  width: 50em;\n  height: 50em;\n`;\nconst StyledSVGZero = styled(ImportedComponentZero)`\n  display: block;\n  margin: auto;\n  width: 50em;\n  height: 50em;\n`;\n\nconst Feed = () => {\n  return (\n    <div className=\"feed_wrapper\">\n      <div className=\"name\" >\n        <h1 className=\"firstname\">ALEX </h1>{\" \"}\n        <div className=\"objectTop\">\n          <StyledSVGOne className=\" objectAnimation one\" />\n          <StyledSVGZero className=\"  two\" />\n          <StyledSVGOne className=\" objectAnimation three\" />\n        </div>\n        <h1 className=\"text first\" data-text=\"LOUTTCHENKO\">\n          LOUTTCHENKO\n        </h1>\n        <div className='feed_role'>\n        <p >Web Developer</p>\n\n        </div>\n\n      </div>\n      <div className='icon-scroll'></div>\n    </div>\n  );\n};\n\nexport default Feed;\n","/Users/alex/Desktop/portfolio/my-portfolio/src/imageList.js",[],"/Users/alex/Desktop/portfolio/my-portfolio/src/components/Projects/Projects.js",[],"/Users/alex/Desktop/portfolio/my-portfolio/src/components/Projects/Project/Project.js",["63","64","65","66"],"import {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Chip,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Image } from \"@material-ui/icons\";\nimport React from \"react\";\nimport styles from \"./Project.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1.2),\n    },\n  },\n}));\n\nconst Project = ({ title, link, code, image, technologies }) => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"project_rootWrapper\">\n      <Card className=\"project_root\">\n        <CardActionArea>\n          <CardMedia\n            className=\"project_media\"\n            image={image}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"h5\"\n              component=\"h2\"\n              className=\"project_cart project_title\"\n            >\n              {title}\n            </Typography>\n\n            <div className={classes.root}>\n              {technologies.map((tech) => (\n                <Chip label={tech} className=\"project_chipStyle\" />\n              ))}\n            </div>\n          </CardContent>\n        </CardActionArea>\n        <CardActions className=\"project_buttons\">\n          <Button size=\"small\" color=\"primary\" className=\"project_cart\">\n            <a target=\"_blank\" href={link}>\n              Live version\n            </a>\n          </Button>\n          <Button size=\"small\" color=\"primary\" className=\"project_cart\">\n            <a target=\"_blank\" href={code}>\n              Code\n            </a>\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\n\nexport default Project;\n","/Users/alex/Desktop/portfolio/my-portfolio/src/components/Skills/Skills.js",[],"/Users/alex/Desktop/portfolio/my-portfolio/src/components/Skills/Skill/Skill.js",[],"/Users/alex/Desktop/portfolio/my-portfolio/src/components/Experience/Experience.js",[],"/Users/alex/Desktop/portfolio/my-portfolio/src/components/ContactMe/ContactMe.js",["67","68","69","70","71"],"import React from \"react\";\nimport * as emailjs from \"emailjs-com\";\nimport \"./ContactMe.css\";\nimport {\n  Button,\n  ButtonBase,\n  Container,\n  CssBaseline,\n  Grid,\n  makeStyles,\n  styled,\n  TextField,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\n\nimport { ReactComponent as GithubSVG } from \"../../icons/github.svg\";\nimport { ReactComponent as LinkedinSVG } from \"../../icons/linkedIn.svg\";\nimport louttchenkoCV from \"../../icons/louttchenkoCV.pdf\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: \"#0effea\",\n    height: \"50px\",\n    fontWeight: \"600\",\n    fontSize: \"27px\",\n    fontFamily: \"Geo\",\n  },\n}));\n\nconst ValidationTextField = withStyles({\n  root: {\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      border: \"2px solid #fff\",\n    },\n    \"& .MuiFormLabel-root.Mui-focused\": {\n      color: \"#0effea\",\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"#fff\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"&:hover fieldset\": {\n        borderColor: \"#0effea\",\n      },\n    },\n\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#0effea\",\n    },\n    \"& .MuiInputBase-root\": {\n      color: \"#fff\",\n    },\n    \"& input:valid + fieldset\": {\n      borderColor: \"#0effea\",\n      borderWidth: 2,\n    },\n    \"& input:invalid + fieldset\": {\n      borderColor: \"#fff\",\n      borderWidth: 2,\n    },\n    \"& input:valid:focus + fieldset\": {\n      borderColor: \"#0effea\",\n      borderLeftWidth: 6,\n      padding: \"4px !important\", // override inline-style\n    },\n  },\n})(TextField);\n\nconst ModefiedButton = withStyles({\n  \"& .MuiButton-containedPrimary\": {\n    fontWeight: \"600\",\n    color: \"#000\",\n    backgroundColor: \" #0effea\",\n  },\n})(Button);\n\nconst ContactMe = () => {\n  const classes = useStyles();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        \"service_1ibi4kq\",\n        \"template_wcosoga\",\n        e.target,\n        \"user_2ooPjTDKAzNeQu1DTVYiT\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text, \"success\");\n        },\n        (error) => {\n          console.log(error.text, \"error\");\n        }\n      );\n\n    e.target.reset();\n  };\n  const StyledSVGLinkedin = styled(LinkedinSVG)`\n    display: block;\n    margin: auto;\n  `;\n  const StyledSVGGithub = styled(GithubSVG)`\n    display: block;\n    margin: auto;\n  `;\n  return (\n    <div className='contactme_wrapper' id=\"contact\">\n      <div className=\"contact_title\" >\n        <p >Contact me</p>\n      </div>\n      <div className=\"contact_wrapper\">\n                \n      <div className=\"contact_infoWrapper\">\n          <div className=\"contact_info\">\n            <div className=\"contact_infoSvg\">\n              <div>LinkedIn :</div>\n              <div className=\"contact_svgWrapper\">\n                <a target=\"_blank\" href=\"https://www.linkedin.com/in/alexander-louttchenko-468778202/\">\n                  {\" \"}\n                  <StyledSVGLinkedin className=\"contact_svg\" />\n                </a>\n              </div>\n            </div>\n            <div className=\"contact_infoSvg\">\n              <div>GitHub :</div>\n              <div className=\"contact_svgWrapper\">\n                <a target=\"_blank\" href=\"https://github.com/cyChopp\">\n                  {\" \"}\n                  <StyledSVGGithub className=\"contact_svg\" />\n                </a>\n              </div>\n            </div>\n            <div className=\"contact_infoSvg\">\n              <div>Email :</div>\n              <div className=\"contact_email\">louttchenkoo@gmail.com</div>\n            </div>\n            <div className=\"contact_infoSvg\">\n              <div>CV :</div>\n              <div className=\"contact_cv\">\n                <a href={louttchenkoCV} download=\"louttchenkoCV.pdf\">\n                  Download CV\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"contact_formWrapper\">\n          <Container component=\"main\" maxWidth=\"sm\" >\n            <div className={classes.paper}>\n              <form className={classes.form} onSubmit={sendEmail}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12}>\n                    <ValidationTextField\n                      variant=\"outlined\"\n                      autoComplete=\"fname\"\n                      name=\"name\"\n                      required\n                      fullWidth\n                      id=\"firstName\"\n                      label=\"First Name\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <ValidationTextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"subject\"\n                      label=\"Subject\"\n                      name=\"subject\"\n                      autoComplete=\"lname\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <ValidationTextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <ValidationTextField\n                      multiline\n                      rows={4}\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"message\"\n                      label=\"Message\"\n                      type=\"textarea\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                    />\n                  </Grid>\n                </Grid>\n                <ModefiedButton\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.submit}\n                >\n                  Send\n                </ModefiedButton>\n              </form>\n            </div>\n          </Container>\n        </div>\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default ContactMe;\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":4,"column":10,"nodeType":"78","messageId":"79","endLine":4,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":14},{"ruleId":"76","severity":1,"message":"81","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":25},{"ruleId":"76","severity":1,"message":"82","line":10,"column":27,"nodeType":"78","messageId":"79","endLine":10,"endColumn":46},{"ruleId":"76","severity":1,"message":"83","line":10,"column":48,"nodeType":"78","messageId":"79","endLine":10,"endColumn":54},{"ruleId":"84","severity":1,"message":"85","line":32,"column":6,"nodeType":"86","endLine":32,"endColumn":8,"suggestions":"87"},{"ruleId":"76","severity":1,"message":"88","line":23,"column":10,"nodeType":"78","messageId":"79","endLine":23,"endColumn":16},{"ruleId":"76","severity":1,"message":"89","line":23,"column":18,"nodeType":"78","messageId":"79","endLine":23,"endColumn":27},{"ruleId":"76","severity":1,"message":"83","line":1,"column":10,"nodeType":"78","messageId":"79","endLine":1,"endColumn":16},{"ruleId":"76","severity":1,"message":"90","line":12,"column":10,"nodeType":"78","messageId":"79","endLine":12,"endColumn":15},{"ruleId":"76","severity":1,"message":"91","line":14,"column":8,"nodeType":"78","messageId":"79","endLine":14,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":58,"column":13,"nodeType":"94","endLine":58,"endColumn":44},{"ruleId":"92","severity":1,"message":"93","line":63,"column":13,"nodeType":"94","endLine":63,"endColumn":44},{"ruleId":"76","severity":1,"message":"95","line":6,"column":3,"nodeType":"78","messageId":"79","endLine":6,"endColumn":13},{"ruleId":"76","severity":1,"message":"96","line":8,"column":3,"nodeType":"78","messageId":"79","endLine":8,"endColumn":14},{"ruleId":"76","severity":1,"message":"97","line":13,"column":3,"nodeType":"78","messageId":"79","endLine":13,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":134,"column":17,"nodeType":"94","endLine":134,"endColumn":104},{"ruleId":"92","severity":1,"message":"93","line":143,"column":17,"nodeType":"94","endLine":143,"endColumn":70},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'imageList' is defined but never used.","Identifier","unusedVar","'social' is defined but never used.","'AnimatePresence' is defined but never used.","'AnimateSharedLayout' is defined but never used.","'motion' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scroll'. Either include it or remove the dependency array.","ArrayExpression",["100"],"'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'Image' is defined but never used.","'styles' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'ButtonBase' is defined but never used.","'CssBaseline' is defined but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [scroll]",{"range":"103","text":"104"},[1040,1042],"[scroll]"]